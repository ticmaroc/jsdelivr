{"version":3,"sources":["lzstring.js","plugin/lzstring.js"],"names":["definition","settings","isObject","isTypeOf","compressUTF16","uncompressed","bitsPerChar","i","value","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","ii","charAt","objectPrototypeHasOwnProperty","call","charCodeAt","push","getCharFromInt","Math","pow","String","join","decompressUTF16","compressed","length","resetValue","next","w","resb","c","dictionary","enlargeIn","dictSize","numBits","entry","result","data","val","getNextValue","position","index","bits","maxpower","mathPow22","power","mathPow28","stringFormCharCode","mathPow216","a","compress","input","decompress","isEnabled","path","pointer","match","pattern","indexOf","weight","state","enabled","key","fromCharCode","Object","prototype","hasOwnProperty","demand","on","loader","source","deferred","pledge","cache","provide"],"mappings":"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","file":"plugin/lzstring.js","sourcesContent":[null,"/**\n * Qoopido.demand plugin/lzstring\n *\n * Based on lz-string:\n *   Repo:    https://github.com/pieroxy/lz-string\n *   License: https://github.com/pieroxy/lz-string/blob/master/LICENSE.txt\n *\n * Copyright (c) 2016 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n */\n\n(function() {\n\t'use strict';\n\n\tfunction definition(settings, isObject, isTypeOf) {\n\t\tvar path                          = '/demand/plugin/lzstring',\n\t\t\tstringFormCharCode            = String.fromCharCode,\n\t\t\tobjectPrototypeHasOwnProperty = Object.prototype.hasOwnProperty,\n\t\t\tmathPow22                     = Math.pow(2, 2),\n\t\t\tmathPow28                     = Math.pow(2, 8),\n\t\t\tmathPow216                    = Math.pow(2, 16),\n\t\t\tpattern                       = [ { pattern: path, weight: path.length, state: false }],\n\t\t\tenabled, key;\n\n\t\tif(isObject(settings)) {\n\t\t\tfor(key in settings) {\n\t\t\t\tpattern.push({ pattern: key, weight: key.length, state: settings[key] });\n\t\t\t}\n\t\t} else if(isTypeOf(settings, 'boolean')) {\n\t\t\tenabled = settings;\n\t\t}\n\n\t\tfunction compressUTF16(uncompressed, bitsPerChar) {\n\t\t\tvar context_dictionary         = {},\n\t\t\t\tcontext_dictionaryToCreate = {},\n\t\t\t\tcontext_c                  = '',\n\t\t\t\tcontext_wc                 = '',\n\t\t\t\tcontext_w                  = '',\n\t\t\t\tcontext_enlargeIn          = 2,\n\t\t\t\tcontext_dictSize           = 3,\n\t\t\t\tcontext_numBits            = 2,\n\t\t\t\tcontext_data               = [],\n\t\t\t\tcontext_data_val           = 0,\n\t\t\t\tcontext_data_position      = 0,\n\t\t\t\tii = 0, i, value;\n\n\t\t\tbitsPerChar -= 1;\n\n\t\t\tfor(; uncompressed[ii]; ii++) {\n\t\t\t\tcontext_c = uncompressed.charAt(ii);\n\n\t\t\t\tif(!objectPrototypeHasOwnProperty.call(context_dictionary, context_c)) {\n\t\t\t\t\tcontext_dictionary[context_c]         = context_dictSize++;\n\t\t\t\t\tcontext_dictionaryToCreate[context_c] = true;\n\t\t\t\t}\n\n\t\t\t\tcontext_wc = context_w + context_c;\n\n\t\t\t\tif(objectPrototypeHasOwnProperty.call(context_dictionary, context_wc)) {\n\t\t\t\t\tcontext_w = context_wc;\n\t\t\t\t} else {\n\t\t\t\t\tif(objectPrototypeHasOwnProperty.call(context_dictionaryToCreate, context_w)) {\n\t\t\t\t\t\tif(context_w.charCodeAt(0) < 256) {\n\t\t\t\t\t\t\tfor(i = 0 ; i < context_numBits ; i++) {\n\t\t\t\t\t\t\t\tcontext_data_val = (context_data_val << 1);\n\n\t\t\t\t\t\t\t\tif(context_data_position === bitsPerChar) {\n\t\t\t\t\t\t\t\t\tcontext_data.push(getCharFromInt(context_data_val));\n\n\t\t\t\t\t\t\t\t\tcontext_data_position = 0;\n\t\t\t\t\t\t\t\t\tcontext_data_val      = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcontext_data_position++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalue = context_w.charCodeAt(0);\n\n\t\t\t\t\t\t\tfor(i = 0 ; i < 8 ; i++) {\n\t\t\t\t\t\t\t\tcontext_data_val = (context_data_val << 1) | (value&1);\n\n\t\t\t\t\t\t\t\tif(context_data_position === bitsPerChar) {\n\t\t\t\t\t\t\t\t\tcontext_data.push(getCharFromInt(context_data_val));\n\n\t\t\t\t\t\t\t\t\tcontext_data_position = 0;\n\t\t\t\t\t\t\t\t\tcontext_data_val      = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcontext_data_position++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvalue = value >> 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalue = 1;\n\n\t\t\t\t\t\t\tfor(i = 0 ; i < context_numBits ; i++) {\n\t\t\t\t\t\t\t\tcontext_data_val = (context_data_val << 1) | value;\n\n\t\t\t\t\t\t\t\tif(context_data_position === bitsPerChar) {\n\t\t\t\t\t\t\t\t\tcontext_data.push(getCharFromInt(context_data_val));\n\n\t\t\t\t\t\t\t\t\tcontext_data_position = 0;\n\t\t\t\t\t\t\t\t\tcontext_data_val      = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcontext_data_position++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalue = context_w.charCodeAt(0);\n\n\t\t\t\t\t\t\tfor(i = 0 ; i < 16 ; i++) {\n\t\t\t\t\t\t\t\tcontext_data_val = (context_data_val << 1) | (value&1);\n\n\t\t\t\t\t\t\t\tif(context_data_position === bitsPerChar) {\n\t\t\t\t\t\t\t\t\tcontext_data.push(getCharFromInt(context_data_val));\n\n\t\t\t\t\t\t\t\t\tcontext_data_position = 0;\n\t\t\t\t\t\t\t\t\tcontext_data_val      = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcontext_data_position++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvalue = value >> 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontext_enlargeIn--;\n\n\t\t\t\t\t\tif(context_enlargeIn === 0) {\n\t\t\t\t\t\t\tcontext_enlargeIn = Math.pow(2, context_numBits);\n\n\t\t\t\t\t\t\tcontext_numBits++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdelete context_dictionaryToCreate[context_w];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = context_dictionary[context_w];\n\n\t\t\t\t\t\tfor(i = 0 ; i < context_numBits ; i++) {\n\t\t\t\t\t\t\tcontext_data_val = (context_data_val << 1) | (value&1);\n\n\t\t\t\t\t\t\tif(context_data_position === bitsPerChar) {\n\t\t\t\t\t\t\t\tcontext_data.push(getCharFromInt(context_data_val));\n\n\t\t\t\t\t\t\t\tcontext_data_position = 0;\n\t\t\t\t\t\t\t\tcontext_data_val      = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontext_data_position++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalue = value >> 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext_enlargeIn--;\n\n\t\t\t\t\tif(context_enlargeIn === 0) {\n\t\t\t\t\t\tcontext_enlargeIn = Math.pow(2, context_numBits);\n\n\t\t\t\t\t\tcontext_numBits++;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext_dictionary[context_wc] = context_dictSize++;\n\t\t\t\t\tcontext_w                      = String(context_c);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (context_w !== '') {\n\t\t\t\tif(objectPrototypeHasOwnProperty.call(context_dictionaryToCreate, context_w)) {\n\t\t\t\t\tif(context_w.charCodeAt(0) < 256) {\n\t\t\t\t\t\tfor(i = 0 ; i < context_numBits ; i++) {\n\t\t\t\t\t\t\tcontext_data_val = (context_data_val << 1);\n\n\t\t\t\t\t\t\tif(context_data_position === bitsPerChar) {\n\t\t\t\t\t\t\t\tcontext_data.push(getCharFromInt(context_data_val));\n\n\t\t\t\t\t\t\t\tcontext_data_position = 0;\n\t\t\t\t\t\t\t\tcontext_data_val      = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontext_data_position++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvalue = context_w.charCodeAt(0);\n\n\t\t\t\t\t\tfor(i = 0 ; i < 8 ; i++) {\n\t\t\t\t\t\t\tcontext_data_val = (context_data_val << 1) | (value&1);\n\n\t\t\t\t\t\t\tif(context_data_position === bitsPerChar) {\n\t\t\t\t\t\t\t\tcontext_data.push(getCharFromInt(context_data_val));\n\n\t\t\t\t\t\t\t\tcontext_data_position = 0;\n\t\t\t\t\t\t\t\tcontext_data_val      = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontext_data_position++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalue = value >> 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = 1;\n\n\t\t\t\t\t\tfor(i = 0 ; i < context_numBits ; i++) {\n\t\t\t\t\t\t\tcontext_data_val = (context_data_val << 1) | value;\n\n\t\t\t\t\t\t\tif(context_data_position === bitsPerChar) {\n\t\t\t\t\t\t\t\tcontext_data.push(getCharFromInt(context_data_val));\n\n\t\t\t\t\t\t\t\tcontext_data_position = 0;\n\t\t\t\t\t\t\t\tcontext_data_val      = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontext_data_position++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvalue = context_w.charCodeAt(0);\n\n\t\t\t\t\t\tfor(i = 0 ; i < 16 ; i++) {\n\t\t\t\t\t\t\tcontext_data_val = (context_data_val << 1) | (value&1);\n\n\t\t\t\t\t\t\tif(context_data_position === bitsPerChar) {\n\t\t\t\t\t\t\t\tcontext_data.push(getCharFromInt(context_data_val));\n\n\t\t\t\t\t\t\t\tcontext_data_position = 0;\n\t\t\t\t\t\t\t\tcontext_data_val      = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontext_data_position++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalue = value >> 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext_enlargeIn--;\n\n\t\t\t\t\tif(context_enlargeIn === 0) {\n\t\t\t\t\t\tcontext_enlargeIn = Math.pow(2, context_numBits);\n\n\t\t\t\t\t\tcontext_numBits++;\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete context_dictionaryToCreate[context_w];\n\t\t\t\t} else {\n\t\t\t\t\tvalue = context_dictionary[context_w];\n\n\t\t\t\t\tfor(i = 0 ; i < context_numBits ; i++) {\n\t\t\t\t\t\tcontext_data_val = (context_data_val << 1) | (value&1);\n\n\t\t\t\t\t\tif(context_data_position === bitsPerChar) {\n\t\t\t\t\t\t\tcontext_data.push(getCharFromInt(context_data_val));\n\n\t\t\t\t\t\t\tcontext_data_position = 0;\n\t\t\t\t\t\t\tcontext_data_val      = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext_data_position++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvalue = value >> 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcontext_enlargeIn--;\n\n\t\t\t\tif(context_enlargeIn === 0) {\n\t\t\t\t\tcontext_numBits++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvalue = 2;\n\n\t\t\tfor(i = 0 ; i < context_numBits ; i++) {\n\t\t\t\tcontext_data_val = (context_data_val << 1) | (value&1);\n\n\t\t\t\tif(context_data_position === bitsPerChar) {\n\t\t\t\t\tcontext_data.push(getCharFromInt(context_data_val));\n\n\t\t\t\t\tcontext_data_position = 0;\n\t\t\t\t\tcontext_data_val      = 0;\n\t\t\t\t} else {\n\t\t\t\t\tcontext_data_position++;\n\t\t\t\t}\n\n\t\t\t\tvalue = value >> 1;\n\t\t\t}\n\n\t\t\twhile(true) { // eslint-disable-line no-constant-condition\n\t\t\t\tcontext_data_val = (context_data_val << 1);\n\n\t\t\t\tif(context_data_position === bitsPerChar) {\n\t\t\t\t\tcontext_data.push(getCharFromInt(context_data_val));\n\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tcontext_data_position++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn context_data.join('');\n\t\t}\n\n\t\tfunction decompressUTF16(compressed, length, resetValue) {\n\t\t\tvar dictionary = [],\n\t\t\t\tenlargeIn  = 4,\n\t\t\t\tdictSize   = 4,\n\t\t\t\tnumBits    = 3,\n\t\t\t\tentry      = '',\n\t\t\t\tresult     = [],\n\t\t\t\tdata       = { val: getNextValue(compressed, 0), position: resetValue, index: 1 },\n\t\t\t\tbits       = 0,\n\t\t\t\tmaxpower   = mathPow22,\n\t\t\t\tpower      = 1,\n\t\t\t\tnext, i, w, resb, c;\n\n\t\t\tfor(i = 0; i < 3; i++) {\n\t\t\t\tdictionary[i] = i;\n\t\t\t}\n\n\t\t\twhile(power !== maxpower) {\n\t\t\t\tresb = data.val & data.position;\n\n\t\t\t\tdata.position >>= 1;\n\n\t\t\t\tif(data.position === 0) {\n\t\t\t\t\tdata.position = resetValue;\n\t\t\t\t\tdata.val      = getNextValue(compressed, data.index++);\n\t\t\t\t}\n\n\t\t\t\tbits |= (resb > 0 ? 1 : 0) * power;\n\t\t\t\tpower <<= 1;\n\t\t\t}\n\n\t\t\tnext = bits;\n\n\t\t\tswitch(next) {\n\t\t\t\tcase 0:\n\t\t\t\t\tbits     = 0;\n\t\t\t\t\tmaxpower = mathPow28;\n\t\t\t\t\tpower    = 1;\n\n\t\t\t\t\twhile(power !== maxpower) {\n\t\t\t\t\t\tresb = data.val & data.position;\n\n\t\t\t\t\t\tdata.position >>= 1;\n\n\t\t\t\t\t\tif(data.position === 0) {\n\t\t\t\t\t\t\tdata.position = resetValue;\n\t\t\t\t\t\t\tdata.val      = getNextValue(compressed, data.index++);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbits |= (resb>0 ? 1 : 0) * power;\n\t\t\t\t\t\tpower <<= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tc = stringFormCharCode(bits);\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tbits     = 0;\n\t\t\t\t\tmaxpower = mathPow216;\n\t\t\t\t\tpower    = 1;\n\n\t\t\t\t\twhile(power !== maxpower) {\n\t\t\t\t\t\tresb = data.val & data.position;\n\n\t\t\t\t\t\tdata.position >>= 1;\n\n\t\t\t\t\t\tif(data.position === 0) {\n\t\t\t\t\t\t\tdata.position = resetValue;\n\t\t\t\t\t\t\tdata.val      = getNextValue(compressed, data.index++);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbits |= (resb>0 ? 1 : 0) * power;\n\t\t\t\t\t\tpower <<= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tc = stringFormCharCode(bits);\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tdictionary[3] = c;\n\t\t\tw             = c;\n\n\t\t\tresult.push(c);\n\n\t\t\twhile(true) { // eslint-disable-line no-constant-condition\n\t\t\t\tif(data.index > length) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\tbits     = 0;\n\t\t\t\tmaxpower = Math.pow(2, numBits);\n\t\t\t\tpower    = 1;\n\n\t\t\t\twhile(power !== maxpower) {\n\t\t\t\t\tresb = data.val & data.position;\n\n\t\t\t\t\tdata.position >>= 1;\n\n\t\t\t\t\tif(data.position === 0) {\n\t\t\t\t\t\tdata.position = resetValue;\n\t\t\t\t\t\tdata.val      = getNextValue(compressed, data.index++);\n\t\t\t\t\t}\n\n\t\t\t\t\tbits |= (resb>0 ? 1 : 0) * power;\n\t\t\t\t\tpower <<= 1;\n\t\t\t\t}\n\n\t\t\t\tswitch(c = bits) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tbits     = 0;\n\t\t\t\t\t\tmaxpower = mathPow28;\n\t\t\t\t\t\tpower    = 1;\n\n\t\t\t\t\t\twhile(power !== maxpower) {\n\t\t\t\t\t\t\tresb = data.val & data.position;\n\n\t\t\t\t\t\t\tdata.position >>= 1;\n\n\t\t\t\t\t\t\tif(data.position === 0) {\n\t\t\t\t\t\t\t\tdata.position = resetValue;\n\t\t\t\t\t\t\t\tdata.val      = getNextValue(compressed, data.index++);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbits |= (resb>0 ? 1 : 0) * power;\n\t\t\t\t\t\t\tpower <<= 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdictionary[dictSize++] = stringFormCharCode(bits);\n\t\t\t\t\t\tc                      = dictSize - 1;\n\n\t\t\t\t\t\tenlargeIn--;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tbits     = 0;\n\t\t\t\t\t\tmaxpower = mathPow216;\n\t\t\t\t\t\tpower    = 1;\n\n\t\t\t\t\t\twhile(power !== maxpower) {\n\t\t\t\t\t\t\tresb = data.val & data.position;\n\n\t\t\t\t\t\t\tdata.position >>= 1;\n\n\t\t\t\t\t\t\tif(data.position === 0) {\n\t\t\t\t\t\t\t\tdata.position = resetValue;\n\t\t\t\t\t\t\t\tdata.val      = getNextValue(compressed, data.index++);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbits |= (resb>0 ? 1 : 0) * power;\n\n\t\t\t\t\t\t\tpower <<= 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdictionary[dictSize++] = stringFormCharCode(bits);\n\t\t\t\t\t\tc                      = dictSize - 1;\n\n\t\t\t\t\t\tenlargeIn--;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn result.join('');\n\t\t\t\t}\n\n\t\t\t\tif(enlargeIn === 0) {\n\t\t\t\t\tenlargeIn = Math.pow(2, numBits);\n\n\t\t\t\t\tnumBits++;\n\t\t\t\t}\n\n\t\t\t\tif(dictionary[c]) {\n\t\t\t\t\tentry = dictionary[c];\n\t\t\t\t} else {\n\t\t\t\t\tif(c === dictSize) {\n\t\t\t\t\t\tentry = w + w.charAt(0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.push(entry);\n\n\t\t\t\tdictionary[dictSize++] = w + entry.charAt(0);\n\n\t\t\t\tenlargeIn--;\n\n\t\t\t\tw = entry;\n\n\t\t\t\tif(enlargeIn === 0) {\n\t\t\t\t\tenlargeIn = Math.pow(2, numBits);\n\n\t\t\t\t\tnumBits++;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\tfunction getCharFromInt(a) {\n\t\t\treturn stringFormCharCode(a + 32);\n\t\t}\n\n\t\tfunction getNextValue(compressed, index) {\n\t\t\treturn compressed.charCodeAt(index) - 32;\n\t\t}\n\n\t\tfunction compress(input) {\n\t\t\treturn input ? compressUTF16(input, 15) + ' ' : '';\n\t\t}\n\n\t\tfunction decompress(compressed) {\n\t\t\treturn compressed ? decompressUTF16(compressed, compressed.length, 16384) : '';\n\t\t}\n\n\t\tfunction isEnabled(path) {\n\t\t\tvar i = 0, pointer, match;\n\n\t\t\tfor(; (pointer = pattern[i]); i++) {\n\t\t\t\tif(path.indexOf(pointer.pattern) === 0 && (!match || pointer.weight > match.weight)) {\n\t\t\t\t\tmatch = pointer;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn match ? match.state : false;\n\t\t}\n\n\t\tdemand\n\t\t\t.on('preCache', function(loader) {\n\t\t\t\tif(enabled || isEnabled(loader.path)) {\n\t\t\t\t\tloader.source = compress(loader.source);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on('preProcess', function(loader) {\n\t\t\t\tif(loader.deferred.pledge.cache === 'hit' && (enabled || isEnabled(loader.path))) {\n\t\t\t\t\tloader.source = decompress(loader.source);\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn {\n\t\t\tcompress:   compress,\n\t\t\tdecompress: decompress\n\t\t};\n\t}\n\n\tprovide([ 'settings', '/demand/validator/isObject', '/demand/validator/isTypeOf' ], definition);\n}());"],"sourceRoot":"/source/"}