(function(){"use strict";angular.module("tubular-reporting.directives",["tubular.services"]).directive("tbReporting",[function(){return{template:'<div class="container"><tb-form model="Model"><div class="tubular-overlay" ng-show="showLoading"><\/div><tb-reporting-toolbar><\/tb-reporting-toolbar><br /><tb-reporting-columns-selector><\/tb-reporting-columns-selector><\/tb-form><button class="btn btn-xs btn-block" tooltip="Click to toggle" ng-click="isShowing = !isShowing"><i class="fa" ng-class="{\'fa-caret-down\' : !isShowing, \'fa-caret-up\' : isShowing, }"><\/i><\/button><hr /><div ng-include="autoCode"><\/div><\/div>',restrict:"E",replace:!0,scope:{serverDataSourceUrl:"@",serverMarkupUrl:"@",requireAuthentication:"=?"},controller:["$scope","tubularHttp","localStorageService",function(n,t,i){n.tubularDirective="tubular-reporting";n.isShowing=!0;n.showLoading=!0;n.requireAuthentication=angular.isUndefined(n.requireAuthentication)?!0:n.requireAuthentication;n.items=[];n.reports=i.get("reports")||[];t.setRequireAuthentication(n.requireAuthentication);t.get(n.serverDataSourceUrl||"api/reports/datasources").promise.then(function(t){n.dataSources=t.DataSources;n.aggregationFunctions=t.AggregationFunctions;n.types=t.Types},function(t){n.$emit("tbReporting_OnConnectionError",t)}).then(function(){n.showLoading=!1});n.addItem=function(){n.items.push({DataSource:n.Model.DataSource.Name,Column:n.Model.Column.Name,DataType:n.Model.DataType,Aggregation:n.Model.AggregationFunction,Filter:n.Model.Filter});n.Model.Filter=""};n.removeItem=function(t){var i=n.items.indexOf(t);i>-1&&n.items.splice(i,1)};n.moveItem=function(t,i){n.items.splice(i,0,n.items.splice(t,1)[0])};n.up=function(t){var i=n.items.indexOf(t);n.moveItem(i,i-1)};n.down=function(t){var i=n.items.indexOf(t);n.moveItem(i,i+1)};n.saveReport=function(){n.reports.push({Name:n.Model.CurrentReport,Data:n.items});i.set("reports",n.reports);n.$emit("tbReporting_OnSuccessfulSave","Report saved")};n.removeReport=function(){var t=n.reports.filter(function(t){return t.Name===n.Model.CurrentReport.Name}),r;t&&t[0]?(r=n.reports.indexOf(t[0]),r>-1&&(n.reports.splice(r,1),i.set("reports",n.reports),n.$emit("tbReporting_OnRemoved","Report removed"))):n.$emit("tbReporting_OnConnectionError","Unknown report")};n.loadReport=function(){var t=n.reports.filter(function(t){return t.Name===n.Model.CurrentReport.Name});t&&t[0]?n.items=t[0].Data:n.$emit("tbReporting_OnConnectionError","Unknown report")};n.isValid=function(){return n.items.length>0};n.generate=function(){t.setRequireAuthentication(n.requireAuthentication);t.post(n.serverMarkupUrl||"api/reports/getmarkup",n.items).promise.then(function(t){n.autoCode=window.URL.createObjectURL(new Blob([t],{type:"text/html"}))},function(t){n.$emit("tbReporting_OnConnectionError",t)}).then(function(){n.showLoading=!1})}}]}}]).directive("tbReportingToolbar",[function(){return{template:'<div class="row" ng-show="isShowing"><div class="col-md-3"><div class="pull-right clearfix"><tb-typeahead-editor name="CurrentReport" options="reports" option-label="Name" placeholder="Report name"><\/tb-typeahead-editor><\/div><\/div><div class="col-md-6"><div class="pull-right clearfix"><button class="btn btn-default" ng-click="loadReport()" ng-disabled="!Model.CurrentReport"><i class="fa fa-cloud-download"><\/i>&nbsp;{{\'CAPTION_LOAD\' | translate}}<\/button><button class="btn btn-default" ng-click="saveReport()" ng-disabled="!Model.CurrentReport"><i class="fa fa-cloud-upload"><\/i>&nbsp;{{\'CAPTION_SAVE\' | translate}}<\/button><button class="btn btn-default" ng-click="removeReport()" ng-disabled="!Model.CurrentReport.Name"><i class="fa fa-trash-o"><\/i>&nbsp;{{\'CAPTION_REMOVE\' | translate}}<\/button><\/div><\/div><div class="col-md-3"><div class="pull-right clearfix"><button class="btn btn-success" ng-disabled="items.length == 0" ng-click="generate()"><i class="fa fa-cogs"><\/i>&nbsp;{{\'UI_GENERATEREPORT\' | translate}}<\/button><\/div><\/div><\/div>',restrict:"E",replace:!0,scope:!1}}]).directive("tbReportingColumnsSelector",[function(){return{template:'<table class="table table-bordered" ng-show="isShowing"><thead><tr><th>Data Source<\/th><th>Column<\/th><th>Data Type<\/th><th>Aggregation<\/th><th>Filter Expression<\/th><th>&nbsp;<\/th><\/tr><\/thead><tbody><tr><td><tb-dropdown-editor name="DataSource" options="dataSources" option-label="Name"><\/tb-dropdown-editor><\/td><td><tb-dropdown-editor name="Column" options="Model.DataSource.Columns" option-label="Name" option-id="Name"><\/tb-dropdown-editor><\/td><td><tb-simple-editor name="DataType" read-only="true" value="types[Model.Column.DataType]"><\/tb-simple-editor><\/td><td><tb-dropdown-editor name="AggregationFunction" options="aggregationFunctions"><\/tb-dropdown-editor><\/td><td><tb-simple-editor name="Filter"><\/tb-simple-editor><\/td><td class="text-center"><button class="btn btn-success btn-sm" ng-click="addItem()">{{\'CAPTION_ADD\' | translate}}<\/button><\/td><\/tr><tr ng-repeat="item in items"><td>{{item.DataSource}}<\/td><td>{{item.Column}}<\/td><td>{{item.DataType}}<\/td><td><select class="form-control" ng-model="item.Aggregation" ng-options="a for a in aggregationFunctions"><\/select><\/td><td><input type="text" class="form-control" ng-model="item.Filter" /><\/td><td class="text-center"><div class="btn-group"><button class="btn btn-sm" ng-click="up(item)" ng-disabled="$first"><i class="fa fa-chevron-up"><\/i><\/button><button class="btn btn-sm" ng-click="down(item)" ng-disabled="$last"><i class="fa fa-chevron-down"><\/i><\/button><button class="btn btn-danger btn-sm" ng-click="removeItem(item)"><i class="fa fa-trash"><\/i><\/button><\/div><\/td><\/tr><\/tbody><\/table>',restrict:"E",replace:!0,scope:!1}}]).config(["$sceDelegateProvider",function(n){n.resourceUrlWhitelist(["self","blob:**"])}])})();