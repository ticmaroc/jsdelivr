{"version":3,"sources":["base.js"],"names":["definition","functionDescriptorGenerate","base","objectCreate","Object","create","objectDefineProperty","defineProperty","objectGetOwnPropertyDescriptor","getOwnPropertyDescriptor","objectGetOwnPropertyNames","getOwnPropertyNames","extend","fn","parent","this","source","prototype","properties","forEach","property","provide"],"mappings":"CAgBC,WACA,YAEA,SAASA,GAAWC,GAMnB,QAASC,MALT,GAAIC,GAAiCC,OAAOC,OAC3CC,EAAiCF,OAAOG,eACxCC,EAAiCJ,OAAOK,yBACxCC,EAAiCN,OAAOO,mBAsBzC,OAlBAT,GAAKU,OAAS,SAASC,GACtB,GAAIC,GAAaC,KAChBC,EAAaH,EAAGI,UAChBC,IAYD,OAVAR,GAA0BM,GAAQG,QAAQ,SAASC,GAClDF,EAAWE,GAAYZ,EAA+BQ,EAAQI,KAG/DF,EAAwB,YAAIjB,EAA2BY,GAEvDA,EAAGI,UAAYd,EAAaW,EAAOG,WAAaH,EAAQI,IAEvDL,EAAAA,UAAaP,EAAqBO,EAAI,SAAUZ,EAA2Ba,EAAOF,QAAQ,IAEpFC,GAGDX,EAGRmB,SAAU,kCAAoCrB","file":"base.js","sourcesContent":["/**\n * Qoopido base\n *\n * Provides the basic object inheritance and extension mechanism\n *\n * Copyright (c) 2015 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n *\n * @require ./function/descriptor/generate\n */\n\n(function() {\n\t'use strict';\n\n\tfunction definition(functionDescriptorGenerate) {\n\t\tvar objectCreate                   = Object.create,\n\t\t\tobjectDefineProperty           = Object.defineProperty,\n\t\t\tobjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor,\n\t\t\tobjectGetOwnPropertyNames      = Object.getOwnPropertyNames;\n\t\t\n\t\tfunction base() {}\n\n\t\tbase.extend = function(fn) {\n\t\t\tvar parent     = this,\n\t\t\t\tsource     = fn.prototype,\n\t\t\t\tproperties = {};\n\n\t\t\tobjectGetOwnPropertyNames(source).forEach(function(property) {\n\t\t\t\tproperties[property] = objectGetOwnPropertyDescriptor(source, property);\n\t\t\t});\n\n\t\t\tproperties['constructor'] = functionDescriptorGenerate(fn);\n\n\t\t\tfn.prototype = objectCreate(parent.prototype || parent, properties);\n\n\t\t\t!fn.final && (objectDefineProperty(fn, 'extend', functionDescriptorGenerate(parent.extend, true)));\n\n\t\t\treturn fn;\n\t\t};\n\n\t\treturn base;\n\t}\n\n\tprovide([ './function/descriptor/generate' ], definition);\n}());"],"sourceRoot":"/source/"}