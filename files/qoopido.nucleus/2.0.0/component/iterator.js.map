{"version":3,"sources":["component/iterator.js"],"names":["definition","Emitter","functionMerge","getStorageProperty","uuid","property","properties","storage","getDataProperty","data","ComponentIterator","settings","self","prototype","constructor","call","this","index","setData","length","item","initial","seek","parseInt","first","last","previous","loop","next","extend","provide"],"mappings":"CAiBC,WACA,YAEA,SAASA,GAAWC,EAASC,GAI5B,QAASC,GAAmBC,EAAMC,GACjC,GAAIC,EAEJ,QAAGA,EAAaC,EAAQH,IAChBE,EAAWD,GADnB,OAKD,QAASG,GAAgBJ,EAAMC,GAC9B,GAAIC,EAEJ,QAAIA,EAAaC,EAAQH,KAAUE,EAAWG,KACtCH,EAAWG,KAAKJ,GADxB,OAKD,QAASK,GAAkBD,EAAME,GAChC,GAAIC,GAAOX,EAAQY,UAAUC,YAAYC,KAAKC,KAU9C,OARAT,GAAQK,EAAKR,OACZO,SAAUT,KAAkBQ,EAAkBC,SAAUA,GACxDM,MAAU,KACVR,KAAU,MAGXA,GAAQG,EAAKM,QAAQT,GAEdG,EA9BR,GACCC,GADGN,IAgHJ,OA/EAG,GAAkBG,WAGfM,GAAIA,UACH,MAAOX,GAAgBQ,KAAKZ,KAAM,WAAa,GAGhDa,GAAIA,SACH,MAAOd,GAAmBa,KAAKZ,KAAM,UAGtCgB,GAAIA,QACH,MAAOZ,GAAgBQ,KAAKZ,KAAMY,KAAKC,QAGzCC,QAAS,SAAST,GACjB,GACCL,GAAME,EAAYK,EADfC,EAAOI,IAeX,OAZmB,gBAATP,IAAqBA,EAAKU,SACnCf,EAAaQ,EAAKR,KAClBE,EAAaC,EAAQH,GACrBO,EAAaL,EAAWK,SAExBL,EAAWG,KAAOA,EAEM,OAArBE,EAASU,SACXT,EAAKU,KAAKX,EAASU,UAIdT,GAERU,KAAM,SAASL,GACd,GAAIL,GAAaI,KAChBV,EAAaC,EAAQK,EAAKR,KAQ3B,OANAa,GAAQM,SAASN,EAAO,IAErBA,IAAUX,EAAWW,OAA2C,mBAA3BX,GAAWG,KAAKQ,KACvDX,EAAWW,MAAQA,GAGbL,GAERY,MAAO,WACN,MAAOR,MAAKM,KAAK,IAElBG,KAAM,WACL,GAAIb,GAAOI,IAEX,OAAOJ,GAAKU,KAAKV,EAAKO,OAAS,IAEhCO,SAAU,WACT,GAGCT,GAHGL,EAAaI,KAChBZ,EAAaQ,EAAKR,KAClBO,EAAaJ,EAAQH,GAAMO,QAM5B,OAHAM,GAASN,EAASgB,QAAS,GAASf,EAAKK,MAAQ,GAAKL,EAAKO,OAASP,EAAKK,MAAQ,EACjFA,EAASN,EAASgB,QAAS,GAAgB,EAARV,EAAaL,EAAKO,OAASF,EAAQA,EAE/DL,EAAKU,KAAKL,IAElBW,KAAM,WACL,GAGCX,GAHGL,EAAaI,KAChBZ,EAAaQ,EAAKR,KAClBO,EAAaJ,EAAQH,GAAMO,QAK5B,OAFAM,GAASN,EAASgB,QAAS,GAASf,EAAKK,MAAQ,GAAKL,EAAKO,OAASP,EAAKK,MAAQ,EAE1EL,EAAKU,KAAKL,KAIpBJ,EAAqBZ,EAAQ4B,OAAOnB,GACpCG,EAAUF,UAAagB,MAAM,EAAMN,QAAS,GAErCR,EAGRiB,SAAU,aAAc,qBAAuB9B","file":"component/iterator.js","sourcesContent":["/**\n * Qoopido component/iterator\n *\n * Provides UI independent iterator mechanics\n *\n * Copyright (c) 2015 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n *\n * @require ../emitter\n * @require ../function/merge\n */\n\n(function() {\n\t'use strict';\n\n\tfunction definition(Emitter, functionMerge) {\n\t\tvar storage = {},\n\t\t\tprototype;\n\n\t\tfunction getStorageProperty(uuid, property) {\n\t\t\tvar properties;\n\n\t\t\tif(properties = storage[uuid]) {\n\t\t\t\treturn properties[property];\n\t\t\t}\n\t\t}\n\n\t\tfunction getDataProperty(uuid, property) {\n\t\t\tvar properties;\n\n\t\t\tif((properties = storage[uuid]) && properties.data) {\n\t\t\t\treturn properties.data[property];\n\t\t\t}\n\t\t}\n\n\t\tfunction ComponentIterator(data, settings) {\n\t\t\tvar self = Emitter.prototype.constructor.call(this);\n\n\t\t\tstorage[self.uuid] = {\n\t\t\t\tsettings: functionMerge({}, ComponentIterator.settings, settings),\n\t\t\t\tindex:    null,\n\t\t\t\tdata:     null\n\t\t\t};\n\n\t\t\tdata && self.setData(data);\n\n\t\t\treturn self;\n\t\t}\n\n\t\tComponentIterator.prototype = {\n\t\t\t// properties\n\t\t\t\t// length\n\t\t\t\t\tget length() {\n\t\t\t\t\t\treturn getDataProperty(this.uuid, 'length') || 0;\n\t\t\t\t\t},\n\t\t\t\t// index\n\t\t\t\t\tget index() {\n\t\t\t\t\t\treturn getStorageProperty(this.uuid, 'index');\n\t\t\t\t\t},\n\t\t\t\t// item\n\t\t\t\t\tget item() {\n\t\t\t\t\t\treturn getDataProperty(this.uuid, this.index);\n\t\t\t\t\t},\n\t\t\t// methods\n\t\t\t\tsetData: function(data) {\n\t\t\t\t\tvar self = this,\n\t\t\t\t\t\tuuid, properties, settings;\n\n\t\t\t\t\tif(typeof data === 'object' && data.length) {\n\t\t\t\t\t\tuuid       = self.uuid;\n\t\t\t\t\t\tproperties = storage[uuid];\n\t\t\t\t\t\tsettings   = properties.settings;\n\n\t\t\t\t\t\tproperties.data = data;\n\n\t\t\t\t\t\tif(settings.initial !== null) {\n\t\t\t\t\t\t\tself.seek(settings.initial);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn self;\n\t\t\t\t},\n\t\t\t\tseek: function(index) {\n\t\t\t\t\tvar self       = this,\n\t\t\t\t\t\tproperties = storage[self.uuid];\n\n\t\t\t\t\tindex = parseInt(index, 10);\n\n\t\t\t\t\tif(index !== properties.index && typeof properties.data[index] !== 'undefined') {\n\t\t\t\t\t\tproperties.index = index;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn self;\n\t\t\t\t},\n\t\t\t\tfirst: function() {\n\t\t\t\t\treturn this.seek(0);\n\t\t\t\t},\n\t\t\t\tlast: function() {\n\t\t\t\t\tvar self = this;\n\n\t\t\t\t\treturn self.seek(self.length - 1);\n\t\t\t\t},\n\t\t\t\tprevious: function() {\n\t\t\t\t\tvar self       = this,\n\t\t\t\t\t\tuuid       = self.uuid,\n\t\t\t\t\t\tsettings   = storage[uuid].settings,\n\t\t\t\t\t\tindex;\n\n\t\t\t\t\tindex = (settings.loop === true) ? (self.index - 1) % self.length : self.index - 1;\n\t\t\t\t\tindex = (settings.loop === true && index < 0) ? self.length + index : index;\n\n\t\t\t\t\treturn self.seek(index);\n\t\t\t\t},\n\t\t\t\tnext: function() {\n\t\t\t\t\tvar self       = this,\n\t\t\t\t\t\tuuid       = self.uuid,\n\t\t\t\t\t\tsettings   = storage[uuid].settings,\n\t\t\t\t\t\tindex;\n\n\t\t\t\t\tindex = (settings.loop === true) ? (self.index + 1) % self.length : self.index + 1;\n\n\t\t\t\t\treturn self.seek(index);\n\t\t\t\t}\n\t\t};\n\n\t\tprototype          = Emitter.extend(ComponentIterator);\n\t\tprototype.settings = { loop: true, initial: 0 };\n\n\t\treturn prototype;\n\t}\n\n\tprovide([ '../emitter', '../function/merge' ], definition);\n}());"],"sourceRoot":"/source/"}